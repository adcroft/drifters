PROGRAM main

  !use fms_mod, only: read_data
  USE netcdf
  USE params_model, ONLY: nlon, nlat, nlev ! Modify this later, find a build-in way to find these parameters.

  INTEGER :: ncid,istat,varid
  REAL, ALLOCATABLE, DIMENSION(:,:,:) :: uo,vo

  CHARACTER(LEN=38) :: filename='19000101.ocean_hourly_1900_01_01_06.nc' ! Modify this later
  CHARACTER(LEN=15) :: pafilename='drifters_inp.nc' 

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  !
  !   Initialization of the ocean currents
  !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  
  ALLOCATE(uo(nlon,nlat,nlev))
  ALLOCATE(vo(nlon,nlat,nlev))

  ! Read data from the file
  CALL check( NF90_OPEN(filename,NF90_NOWRITE,ncid) )
  CALL check( NF90_INQ_VARID(ncid,'u',varid) )
  CALL check( NF90_GET_VAR(ncid,varid,uo) )
  CALL check( NF90_INQ_VARID(ncid,'v',varid) )
  CALL check( NF90_GET_VAR(ncid,varid,vo) )
  CALL check( NF90_CLOSE(ncid) )
  

  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  !
  !   Initialization of the particles
  !
  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  CALL read_restart(pafilename,parts)

  CALL particles_input_new(parts,filename,ermsg) ! Modify from: drifters_input.f90: drifters_input_new
  CALL particles_run(...) ! Run the particles model

  CALL particles_save_restart(parts)

END PROGRAM main
